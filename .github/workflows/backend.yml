
  name: Backend
  on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]

  env:
    SECRET_KEY: ${{ secrets.SECRET_KEY }}
    DEBUG: ${{ secrets.DEGUB }}
    ALLOWED_HOST: ${{ secrets.ALLOWED_HOST }}

    DB_NAME: ${{ secrets.DB_NAME }}
    DB_USER: ${{ secrets.DB_USER }}
    DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    DB_HOST: ${{ secrets.DB_HOST }}
    DB_PORT: ${{ secrets.DB_PORT }}

    TOKEN: ${{ secrets.TOKEN }}
    START_PAGE: ${{ secrets.START_PAGE }}
    END_PAGE: ${{ secrets.END_PAGE }}
    LIMIT: ${{ secrets.LIMIT }}
    UPDATE: ${{ secrets.UPDATE }}

    FULL_PATH_TO_FILES: ${{ secrets.FULL_PATH_TO_FILES }}

  jobs:
    Test:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          python-version: [ 3.10.x ]

      services:
        postgres:
          image: postgres:latest
          env:
            POSTGRES_USER: ${{ env.DB_USER }}
            POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
            POSTGRES_DB: ${{ env.DB_NAME }}
            POSTGRES_PORT: ${{ env.DB_PORT }}
          options: -health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Setup python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install dependencies
          working-directory: 'backend/requirements'
          run: |
            python -m pip install --upgrade pip
            pip install wheel
            pip install -r requirements.txt
            pip install -r tests.requirements.txt

        - name: Testing
          working-directory: 'backend/app'
          run: |
            python manage.py test

    Lint:
      runs-on: ubuntu-latest

      needs: Test

      defaults:
        run:
          working-directory: 'backend'

      strategy:
        matrix:
          python-version: [ 3.10.x ]

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Setup python
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - name: Install dependencies
          working-directory: 'backend/requirements'
          run: |
            python -m pip install --upgrade pip
            pip install wheel
            pip install -r flake8.requirements.txt

        - name: Linting
          run: |
            flake8 app --config setup.cfg
