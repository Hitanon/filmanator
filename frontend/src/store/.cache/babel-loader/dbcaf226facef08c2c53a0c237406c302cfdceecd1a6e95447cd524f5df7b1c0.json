{"ast":null,"code":"import axios from \"axios\";\nimport { $host } from \"./index.host\";\nconst $authHost = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\nconst refreshToken = async () => {\n  // Обновление токена\n  try {\n    const refresh = localStorage.getItem(\"refresh\");\n    const response = await $host.post(\"api/token/refresh/\", {\n      refresh\n    });\n    localStorage.setItem(\"access\", response.data.access);\n  } catch (error) {\n    localStorage.removeItem(\"access\");\n    localStorage.removeItem(\"refresh\");\n    throw error;\n  }\n};\nconst authHostConfig = config => {\n  // Конфигурация перехватчика (interceptor) запросов для\n  // авторизованного хоста (authHost)\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"access\")}`;\n  return config;\n};\nconst authHostError = async error => {\n  // Конфигурация перехватчика (interceptor) ответов на возникающую\n  // ошибку для авторизованного хоста (authHost)\n  const originalRequest = error.config;\n  if (error.response.status === 401 && !originalRequest._isRetry) {\n    originalRequest._isRetry = true;\n    await refreshToken();\n    originalRequest.headers.Authorization = `Bearer ${localStorage.getItem(\"access\")}`;\n    return axios(originalRequest);\n  }\n  return Promise.reject(error);\n};\n$authHost.interceptors.request.use(authHostConfig);\n$authHost.interceptors.response.use(response => response, authHostError);\nexport { $authHost };","map":{"version":3,"names":["axios","$host","$authHost","create","baseURL","process","env","REACT_APP_API_URL","refreshToken","refresh","localStorage","getItem","response","post","setItem","data","access","error","removeItem","authHostConfig","config","headers","Authorization","authHostError","originalRequest","status","_isRetry","Promise","reject","interceptors","request","use"],"sources":["F:/Study/test_project/LinkShortener/frontend/src/http/index.authHost.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport { $host } from \"./index.host\";\r\n\r\nconst $authHost = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nconst refreshToken = async () => {\r\n  // Обновление токена\r\n  try {\r\n    const refresh = localStorage.getItem(\"refresh\");\r\n    const response  = await $host.post(\"api/token/refresh/\", {refresh});\r\n    localStorage.setItem(\"access\", response.data.access);\r\n  } catch (error) {\r\n    localStorage.removeItem(\"access\");\r\n    localStorage.removeItem(\"refresh\");\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst authHostConfig = config => {\r\n  // Конфигурация перехватчика (interceptor) запросов для\r\n  // авторизованного хоста (authHost)\r\n  config.headers.Authorization = `Bearer ${localStorage.getItem(\"access\")}`;\r\n  return config;\r\n};\r\n\r\nconst authHostError = async (error) => {\r\n  // Конфигурация перехватчика (interceptor) ответов на возникающую\r\n  // ошибку для авторизованного хоста (authHost)\r\n  const originalRequest = error.config;\r\n  if (error.response.status === 401 && !originalRequest._isRetry) {\r\n    originalRequest._isRetry = true;\r\n    await refreshToken();\r\n    originalRequest.headers.Authorization = `Bearer ${localStorage.getItem(\"access\")}`;\r\n    return axios(originalRequest);\r\n  }\r\n\r\n  return Promise.reject(error);\r\n};\r\n\r\n$authHost.interceptors.request.use(authHostConfig);\r\n$authHost.interceptors.response.use(response => response, authHostError);\r\n\r\nexport { $authHost };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAK,QAAQ,cAAc;AAEpC,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC;AACvB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC/B;EACA,IAAI;IACF,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC/C,MAAMC,QAAQ,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,oBAAoB,EAAE;MAACJ;IAAO,CAAC,CAAC;IACnEC,YAAY,CAACI,OAAO,CAAC,QAAQ,EAAEF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,YAAY,CAACQ,UAAU,CAAC,QAAQ,CAAC;IACjCR,YAAY,CAACQ,UAAU,CAAC,SAAS,CAAC;IAClC,MAAMD,KAAK;EACb;AACF,CAAC;AAED,MAAME,cAAc,GAAGC,MAAM,IAAI;EAC/B;EACA;EACAA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASZ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;EACzE,OAAOS,MAAM;AACf,CAAC;AAED,MAAMG,aAAa,GAAG,MAAON,KAAK,IAAK;EACrC;EACA;EACA,MAAMO,eAAe,GAAGP,KAAK,CAACG,MAAM;EACpC,IAAIH,KAAK,CAACL,QAAQ,CAACa,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,QAAQ,EAAE;IAC9DF,eAAe,CAACE,QAAQ,GAAG,IAAI;IAC/B,MAAMlB,YAAY,EAAE;IACpBgB,eAAe,CAACH,OAAO,CAACC,aAAa,GAAI,UAASZ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;IAClF,OAAOX,KAAK,CAACwB,eAAe,CAAC;EAC/B;EAEA,OAAOG,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;AAC9B,CAAC;AAEDf,SAAS,CAAC2B,YAAY,CAACC,OAAO,CAACC,GAAG,CAACZ,cAAc,CAAC;AAClDjB,SAAS,CAAC2B,YAAY,CAACjB,QAAQ,CAACmB,GAAG,CAACnB,QAAQ,IAAIA,QAAQ,EAAEW,aAAa,CAAC;AAExE,SAASrB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}