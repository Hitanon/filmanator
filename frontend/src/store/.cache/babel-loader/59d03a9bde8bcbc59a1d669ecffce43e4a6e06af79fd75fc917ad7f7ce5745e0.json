{"ast":null,"code":"import { $host } from \"./index.host\";\nexport const check = async () => {\n  // Проверка подлинности refresh токена\n  let refresh = localStorage.getItem(\"refresh\");\n  refresh = refresh === null ? 0 : refresh;\n  const response = await $host.post(\"api/token/verify/\", {\n    token: refresh\n  });\n  return response;\n};\nexport const logIn = async _ref => {\n  let {\n    username,\n    password\n  } = _ref;\n  // Авторизация пользователя\n  // username - имя\n  // password - пароль\n  const response = await $host.post(\"api/token/\", {\n    username,\n    password\n  });\n  localStorage.setItem(\"access\", response.data.access);\n  localStorage.setItem(\"refresh\", response.data.refresh);\n  return response;\n};\nexport const logOut = () => {\n  // Деавторизация пользователя\n  const items = [\"access\", \"refresh\", \"fullUrl\", \"shortUrl\"];\n  items.forEach(item => localStorage.removeItem(item));\n};\nexport const registration = async _ref2 => {\n  let {\n    email,\n    username,\n    password\n  } = _ref2;\n  // Регистрация пользователя\n  // email - адрес электронной почты\n  // username - имя\n  // password - пароль\n  const response = await $host.post(\"api/v1/users/\", {\n    email,\n    username,\n    password\n  });\n  return response;\n};","map":{"version":3,"names":["$host","check","refresh","localStorage","getItem","response","post","token","logIn","_ref","username","password","setItem","data","access","logOut","items","forEach","item","removeItem","registration","_ref2","email"],"sources":["F:/Study/test_project/LinkShortener/frontend/src/http/UserApi.js"],"sourcesContent":["import { $host } from \"./index.host\";\r\n\r\nexport const check = async () => {\r\n  // Проверка подлинности refresh токена\r\n  let refresh = localStorage.getItem(\"refresh\");\r\n  refresh = refresh === null ? 0 : refresh;\r\n  const response = await $host.post(\"api/token/verify/\", {\r\n    token: refresh,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const logIn = async ({username, password}) => {\r\n  // Авторизация пользователя\r\n  // username - имя\r\n  // password - пароль\r\n  const response = await $host.post(\"api/token/\", {\r\n    username,\r\n    password,\r\n  });\r\n  localStorage.setItem(\"access\", response.data.access);\r\n  localStorage.setItem(\"refresh\", response.data.refresh);\r\n  return response;\r\n};\r\n\r\nexport const logOut = () => {\r\n  // Деавторизация пользователя\r\n  const items = [\r\n    \"access\",\r\n    \"refresh\",\r\n    \"fullUrl\",\r\n    \"shortUrl\",\r\n  ];\r\n  items.forEach(item => localStorage.removeItem(item));\r\n};\r\n\r\nexport const registration = async ({email, username, password}) => {\r\n  // Регистрация пользователя\r\n  // email - адрес электронной почты\r\n  // username - имя\r\n  // password - пароль\r\n  const response = await $host.post(\"api/v1/users/\", {\r\n    email,\r\n    username,\r\n    password,\r\n  });\r\n  return response;\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,cAAc;AAEpC,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAA,KAAY;EAC/B;EACA,IAAIC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;EAC7CF,OAAO,GAAGA,OAAO,KAAK,IAAI,GAAG,CAAC,GAAGA,OAAO;EACxC,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,mBAAmB,EAAE;IACrDC,KAAK,EAAEL;EACT,CAAC,CAAC;EACF,OAAOG,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,MAAAC,IAAA,IAAgC;EAAA,IAAzB;IAACC,QAAQ;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC9C;EACA;EACA;EACA,MAAMJ,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,YAAY,EAAE;IAC9CI,QAAQ;IACRC;EACF,CAAC,CAAC;EACFR,YAAY,CAACS,OAAO,CAAC,QAAQ,EAAEP,QAAQ,CAACQ,IAAI,CAACC,MAAM,CAAC;EACpDX,YAAY,CAACS,OAAO,CAAC,SAAS,EAAEP,QAAQ,CAACQ,IAAI,CAACX,OAAO,CAAC;EACtD,OAAOG,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMU,MAAM,GAAGA,CAAA,KAAM;EAC1B;EACA,MAAMC,KAAK,GAAG,CACZ,QAAQ,EACR,SAAS,EACT,SAAS,EACT,UAAU,CACX;EACDA,KAAK,CAACC,OAAO,CAACC,IAAI,IAAIf,YAAY,CAACgB,UAAU,CAACD,IAAI,CAAC,CAAC;AACtD,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAC,KAAA,IAAuC;EAAA,IAAhC;IAACC,KAAK;IAAEZ,QAAQ;IAAEC;EAAQ,CAAC,GAAAU,KAAA;EAC5D;EACA;EACA;EACA;EACA,MAAMhB,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,eAAe,EAAE;IACjDgB,KAAK;IACLZ,QAAQ;IACRC;EACF,CAAC,CAAC;EACF,OAAON,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}