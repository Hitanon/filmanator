{"ast":null,"code":"var _jsxFileName = \"F:\\\\Study\\\\test_project\\\\LinkShortener\\\\frontend\\\\src\\\\components\\\\forms\\\\SocketForm.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, TextField } from \"@mui/material\";\nimport { observer } from \"mobx-react-lite\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { createSocket } from \"../../http/SocketApi\";\nimport { Context } from \"../../index\";\nimport { RESULT_ROUTE } from \"../../utils/Consts\";\nimport { normalizeShortUrl } from \"../../utils/SocketUtils\";\nimport { CustomAlert } from \"../ui/CustomAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketForm = _s(observer(_c = _s(() => {\n  _s();\n  // Форма создания сокета\n  const navigate = useNavigate();\n  const {\n    user,\n    loading,\n    alert\n  } = useContext(Context);\n  const [fullUrl, setFullUrl] = useState(\"\");\n  const confirmButtonClicked = async () => {\n    // Обработчик нажатия кнопки создания сокета\n    loading.setIsButtonLoading(true);\n    let response;\n    try {\n      response = await createSocket({\n        fullUrl,\n        isAuth: user.isAuth\n      });\n      localStorage.setItem(\"fullUrl\", response.data[\"full_url\"]);\n      localStorage.setItem(\"shortUrl\", normalizeShortUrl(response.data[\"short_url\"]));\n      navigate(RESULT_ROUTE);\n    } catch (error) {\n      alert.setIsAlert(true);\n      alert.setAlertInfo(error);\n    } finally {\n      loading.setIsButtonLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 4,\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 Url\",\n      onChange: event => setFullUrl(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      variant: \"contained\",\n      onClick: confirmButtonClicked,\n      onChange: e => setFullUrl(e.target.value),\n      loading: loading.isButtonLoading,\n      sx: {\n        background: \"#28384A\"\n      },\n      children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomAlert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}, \"ALEs7ytt78J+rJFxlyfT8c5UFuw=\", false, function () {\n  return [useNavigate];\n})), \"ALEs7ytt78J+rJFxlyfT8c5UFuw=\", false, function () {\n  return [useNavigate];\n});\n_c2 = SocketForm;\nexport { SocketForm };\nvar _c, _c2;\n$RefreshReg$(_c, \"SocketForm$observer\");\n$RefreshReg$(_c2, \"SocketForm\");","map":{"version":3,"names":["useContext","useState","useNavigate","Box","TextField","observer","LoadingButton","createSocket","Context","RESULT_ROUTE","normalizeShortUrl","CustomAlert","jsxDEV","_jsxDEV","SocketForm","_s","_c","navigate","user","loading","alert","fullUrl","setFullUrl","confirmButtonClicked","setIsButtonLoading","response","isAuth","localStorage","setItem","data","error","setIsAlert","setAlertInfo","sx","padding","display","justifyContent","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","e","isButtonLoading","background","_c2","$RefreshReg$"],"sources":["F:/Study/test_project/LinkShortener/frontend/src/components/forms/SocketForm.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, TextField } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\nimport { createSocket } from \"../../http/SocketApi\";\r\nimport { Context } from \"../../index\";\r\nimport { RESULT_ROUTE } from \"../../utils/Consts\";\r\nimport { normalizeShortUrl } from \"../../utils/SocketUtils\";\r\nimport { CustomAlert } from \"../ui/CustomAlert\";\r\n\r\nconst SocketForm = observer(() => {\r\n  // Форма создания сокета\r\n  const navigate = useNavigate();\r\n  const { user, loading, alert } = useContext(Context);\r\n  const [fullUrl, setFullUrl] = useState(\"\");\r\n\r\n  const confirmButtonClicked = async () => {\r\n    // Обработчик нажатия кнопки создания сокета\r\n    loading.setIsButtonLoading(true);\r\n    let response;\r\n\r\n    try {\r\n      response = await createSocket({\r\n        fullUrl,\r\n        isAuth: user.isAuth,\r\n      });\r\n      localStorage.setItem(\"fullUrl\", response.data[\"full_url\"]);\r\n      localStorage.setItem(\"shortUrl\", normalizeShortUrl(response.data[\"short_url\"]));\r\n      navigate(RESULT_ROUTE);\r\n    } catch (error) {\r\n      alert.setIsAlert(true);\r\n      alert.setAlertInfo(error);\r\n    } finally {\r\n      loading.setIsButtonLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        padding: 4,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <TextField\r\n        placeholder=\"Введите Url\"\r\n        onChange={event => setFullUrl(event.target.value)}\r\n      >\r\n      </TextField>\r\n      <LoadingButton\r\n        variant=\"contained\"\r\n        onClick={confirmButtonClicked}\r\n        onChange={e => setFullUrl(e.target.value)}\r\n        loading={loading.isButtonLoading}\r\n        sx={{\r\n          background: \"#28384A\",\r\n        }}\r\n      >\r\n        Подтвердить\r\n      </LoadingButton>\r\n      <CustomAlert />\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport { SocketForm };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}