{"ast":null,"code":"import { $host } from \"./index.host\";\nimport { $authHost } from \"./index.authHost\";\nexport const fetchFullUrl = async _ref => {\n  let {\n    shortUrl\n  } = _ref;\n  // Получение полного URL по короткому URL\n  // shortUrl - короткий URL сокета\n  const response = $host.get(`api/${shortUrl}/`);\n  return response;\n};\nexport const fetchSockets = async _ref2 => {\n  let {\n    page,\n    pageSize\n  } = _ref2;\n  // Получение сокетов пользователя\n  // page - страница\n  // pageSize - количество сокетов на странице\n  const response = await $authHost.get(\"api/v1/sockets/\", {\n    params: {\n      page: page,\n      page_size: pageSize\n    }\n  });\n  return response;\n};\nexport const createSocket = async _ref3 => {\n  let {\n    isAuth,\n    fullUrl\n  } = _ref3;\n  // Создание сокета по полному URL\n  // isAuth - авторизованность пользователя\n  // fullUrl - полный URL сокета\n  const host = isAuth ? $authHost : $host;\n  const response = await host.post(\"api/v1/sockets/\", {\n    full_url: fullUrl\n  });\n  return response;\n};\nexport const deleteSocket = async _ref4 => {\n  let {\n    shortUrl\n  } = _ref4;\n  // Удаление сокета\n  // shortUrl - короткий URL сокета\n  const response = await $authHost.delete(`api/v1/sockets/${shortUrl}/`);\n  return response;\n};","map":{"version":3,"names":["$host","$authHost","fetchFullUrl","_ref","shortUrl","response","get","fetchSockets","_ref2","page","pageSize","params","page_size","createSocket","_ref3","isAuth","fullUrl","host","post","full_url","deleteSocket","_ref4","delete"],"sources":["F:/Study/test_project/LinkShortener/frontend/src/http/SocketApi.js"],"sourcesContent":["import { $host } from \"./index.host\";\r\nimport { $authHost } from \"./index.authHost\";\r\n\r\nexport const fetchFullUrl = async ({shortUrl}) => {\r\n  // Получение полного URL по короткому URL\r\n  // shortUrl - короткий URL сокета\r\n  const response = $host.get(`api/${shortUrl}/`);\r\n  return response;\r\n};\r\n\r\nexport const fetchSockets = async ({page, pageSize}) => {\r\n  // Получение сокетов пользователя\r\n  // page - страница\r\n  // pageSize - количество сокетов на странице\r\n  const response = await $authHost.get(\"api/v1/sockets/\", {\r\n    params: {\r\n      page: page,\r\n      page_size: pageSize,\r\n    },\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const createSocket = async ({isAuth, fullUrl}) => {\r\n  // Создание сокета по полному URL\r\n  // isAuth - авторизованность пользователя\r\n  // fullUrl - полный URL сокета\r\n  const host = isAuth ? $authHost : $host;\r\n  const response = await host.post(\"api/v1/sockets/\", {\r\n    full_url: fullUrl,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const deleteSocket = async ({shortUrl}) => {\r\n  // Удаление сокета\r\n  // shortUrl - короткий URL сокета\r\n  const response = await $authHost.delete(`api/v1/sockets/${shortUrl}/`);\r\n  return response;\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,cAAc;AACpC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAAC,IAAA,IAAsB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EAC3C;EACA;EACA,MAAME,QAAQ,GAAGL,KAAK,CAACM,GAAG,CAAE,OAAMF,QAAS,GAAE,CAAC;EAC9C,OAAOC,QAAQ;AACjB,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAC,KAAA,IAA4B;EAAA,IAArB;IAACC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,KAAA;EACjD;EACA;EACA;EACA,MAAMH,QAAQ,GAAG,MAAMJ,SAAS,CAACK,GAAG,CAAC,iBAAiB,EAAE;IACtDK,MAAM,EAAE;MACNF,IAAI,EAAEA,IAAI;MACVG,SAAS,EAAEF;IACb;EACF,CAAC,CAAC;EACF,OAAOL,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAAC,KAAA,IAA6B;EAAA,IAAtB;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAAF,KAAA;EAClD;EACA;EACA;EACA,MAAMG,IAAI,GAAGF,MAAM,GAAGd,SAAS,GAAGD,KAAK;EACvC,MAAMK,QAAQ,GAAG,MAAMY,IAAI,CAACC,IAAI,CAAC,iBAAiB,EAAE;IAClDC,QAAQ,EAAEH;EACZ,CAAC,CAAC;EACF,OAAOX,QAAQ;AACjB,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAAC,KAAA,IAAsB;EAAA,IAAf;IAACjB;EAAQ,CAAC,GAAAiB,KAAA;EAC3C;EACA;EACA,MAAMhB,QAAQ,GAAG,MAAMJ,SAAS,CAACqB,MAAM,CAAE,kBAAiBlB,QAAS,GAAE,CAAC;EACtE,OAAOC,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}